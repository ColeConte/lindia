% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gg_diagnose.R
\name{gg_diagnose}
\alias{gg_diagnose}
\title{Plot all diagnostic plots given fitted linear regression line.}
\usage{
gg_diagnose(lm_object, theme = NULL, ncol = NULL, include = NULL,
  exclude = NULL, data = NULL, plotAll = TRUE)
}
\arguments{
\item{theme}{A graphing style to apply to all plots. Default to null.}

\item{ncol}{specify number of columns in resulting plot. Default to make a square matrix of the output.}

\item{include}{specify diagnostic plots to include, will plot all if both include and exclude are passed in.}

\item{exclude}{specify diagnostic plots to exclude, will plot all if both include and exclude are passed in.}

\item{plotAll}{boolean value to determine whether plot will be return as 
a plot arranged using `grid.arrange()`. When set to false, the function
would return a list of diagnostic plots. Parameter defaults to TRUE.}

\item{lm}{lm object that contains fitted regression}
}
\value{
A ggplot object that contains residual vs. leverage graph
}
\description{
Plot all diagnostic plots given fitted linear regression line.
}
\examples{
library(MASS)
data(Cars93)
# a regression with categorical variable
cars_lm <- lm(Rev.per.mile ~ Passengers + Length + RPM + Origin, data = Cars93)
gg_diagnose(cars_lm, data = Cars93)
# customize which diagnostic plot is included
plots <- gg_diagnose(cars_lm, data = Cars93, plotAll = FALSE)
names(plots)     # get name of the plots
exclude_plots <- plots[-c(1, 3) ]    #exclude certain diagnostics plots
include_plots <- plots[c(1, 3)]      # include certain diagnostics plots
plot_all(exclude_plots)              # make use of plot_all() in lindia
plot_all(include_plots)
}

